(define if (vau (c t f) e
    (cond ((evsym c e) (evsym t e))
        (true (evsym f e)))))

(define ack (lambda (m n)
    (cond
        ((eq_i? m 0)
            (add_i n 1))
        ((eq_i? n 0)
            (ack (sub_i m 1) 1))
        (true
            (ack (sub_i m 1) (ack m (sub_i n 1)))))))

(define main (lambda (argv) (begin
    (define x (if (vec_size argv) (vec_idx argv 0) 6))
    (print "Ack" 3 x "=" (ack 3 x))
    0)))


